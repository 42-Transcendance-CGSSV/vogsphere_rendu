services:
  transcendence_front_end:
    container_name: front_end
    build:
      context: ./omni_front
      dockerfile: Dockerfile
      args:
        VITE_IP: ${VITE_IP}
    restart: "no"
    volumes:
      - frontend_dist:/app/build
      - frontend_dist:/app/assets


  transcendence_auth:
    container_name: ft-transcendence-auth
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    restart: always
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "https://ft-transcendence-auth:3000/healthcheck", "--cacert", "/etc/ssl/certs/ca-certificates.crt" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - auth_vlm:/app/
      - profiles_pictures:/app/data/static/profiles_pictures

  transcendence_matchmaking:
    container_name: ft-transcendence-matchmaking
    build:
      context: ./matchmaking_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      transcendence_auth:
        condition: service_healthy
      transcendence_pong:
        condition: service_started
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "https://ft-transcendence-matchmaking:3008/healthcheck", "--cacert", "/etc/ssl/certs/ca-certificates.crt" ]
      interval: 5s
      timeout: 5s
      retries: 5

  transcendence_ai:
    container_name: ft-transcendence-ai
    build:
      context: ./pong_ai_service
      dockerfile: Dockerfile
    restart: always
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "https://ft-transcendence-ai:3012/healthcheck", "--cacert", "/etc/ssl/certs/ca-certificates.crt" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - models:/app/assets/models
      - training_data:/app/assets/data:ro

  transcendence_pong:
    container_name: ft-transcendence-pong
    build:
      context: ./pong_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      transcendence_auth:
        condition: service_healthy
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "https://ft-transcendence-pong:3001/healthcheck", "--cacert", "/etc/ssl/certs/ca-certificates.crt" ]
      interval: 5s
      timeout: 5s
      retries: 5

  transcendence_friends:
    container_name: ft-transcendence-friends
    build:
      context: ./friends_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      transcendence_auth:
        condition: service_healthy
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "https://ft-transcendence-friends:3052/healthcheck", "--cacert", "/etc/ssl/certs/ca-certificates.crt" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - friends_data:/app/data

  transcendence_match_history:
    container_name: ft-transcendence-match-history
    build:
      context: ./match_history_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      transcendence_auth:
        condition: service_healthy
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "https://ft-transcendence-match-history:3004/healthcheck", "--cacert", "/etc/ssl/certs/ca-certificates.crt" ]
      interval: 5s
      timeout: 5s
      retries: 5

  transcendence_nginx:
    container_name: ft-transcendence-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    ports:
      - "443:443"
      - "25565:443"
      - "8080:80"
    depends_on:
      transcendence_front_end:
        condition: service_started
      transcendence_auth:
        condition: service_healthy
      transcendence_pong:
        condition: service_healthy
      transcendence_matchmaking:
        condition: service_healthy
      transcendence_match_history:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "https://0.0.0.0:25565/nginx_heath" ]
      start_period: 1s
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - profiles_pictures:/usr/share/nginx/html/assets/data/static/profiles_pictures
      - frontend_dist:/usr/share/nginx/html

volumes:
  frontend_dist:
    name: frontend_dist
    driver: local
  auth_vlm:
    name: auth_vlm
    driver: local
  profiles_pictures:
    name: profiles_pictures
    driver: local
  models:
    name: models
    driver: local
  training_data:
    name: data
    driver: local
  friends_data:
    name: data
    driver: local

networks:
  ft_transcendence_back:
    name: transcendence_back
    driver: bridge