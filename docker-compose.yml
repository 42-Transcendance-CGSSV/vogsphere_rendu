services:
  transcendence_front_end:
    container_name: front_end
    build:
      context: ./omni_front
      dockerfile: Dockerfile
      target: builded
      args:
        VITE_IP: ${VITE_IP}
    image: ft_transcendence:builded-front
    restart: "no"

  transcendence_auth:
    container_name: ft-transcendence-auth
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    restart: always
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://0.0.0.0:3000/healthcheck" ]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - auth_vlm:/app/
      - profiles_pictures:/app/data/static/profiles_pictures

  transcendence_matchmaking:
    container_name: ft-transcendence-matchmaking
    build:
      context: ./matchmaking_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      transcendence_auth:
        condition: service_healthy
      transcendence_pong:
        condition: service_healthy
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://0.0.0.0:3008/healthcheck" ]
      interval: 5s
      timeout: 5s
      retries: 3

  transcendence_ai:
    container_name: ft-transcendence-ai
    build:
      context: ./pong_ai_service
      dockerfile: Dockerfile
    restart: always
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://0.0.0.0:3012/healthcheck" ]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - models:/app/assets/models:ro

  transcendence_pong:
    container_name: ft-transcendence-pong
    build:
      context: ./pong_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      transcendence_auth:
        condition: service_healthy
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://0.0.0.0:3001/healthcheck" ]
      interval: 5s
      timeout: 5s
      retries: 3

  transcendence_match_history:
    container_name: ft-transcendence-match-history
    build:
      context: ./match_history_service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      transcendence_auth:
        condition: service_healthy
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://0.0.0.0:3004/healthcheck" ]
      interval: 5s
      timeout: 5s
      retries: 3


  transcendence_nginx:
    container_name: ft-transcendence-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    networks:
      - ft_transcendence_back
    env_file:
      - .env
    ports:
      - "25565:443"
      - "8080:80"
    depends_on:
      transcendence_front_end:
        condition: service_completed_successfully
      transcendence_auth:
        condition: service_healthy
      transcendence_pong:
        condition: service_healthy
      transcendence_matchmaking:
        condition: service_healthy
      transcendence_match_history:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "https://0.0.0.0:25565/nginx_heath" ]
      start_period: 1s
      interval: 2s
      timeout: 2s
      retries: 1
    volumes:
      - profiles_pictures:/usr/share/nginx/html/assets/data/static/profiles_pictures:ro
volumes:
  auth_vlm:
    name: auth_vlm
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/sgoinfre/ft_transcendence/data/auth_service
  profiles_pictures:
    name: profiles_pictures
    driver: local
  models:
    name: models
    driver: local

networks:
  ft_transcendence_back:
    name: transcendence_back
    driver: bridge